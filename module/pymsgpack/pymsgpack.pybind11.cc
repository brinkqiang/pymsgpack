/********************************************************************
**       This cc file is generated by program,                     **
**            Please do not change it directly.                    **
**                   Auther: brinkqiang                            **
********************************************************************/
// source: pymsgpack.pkg

#include "pymsgpack.pybind11.h"


#include "msgpack_loader.hpp"

#include "object.h"

#include "creature.h"

#include "player.h"

#include "playerinfo.h"

#include "common/types.h"

#include "common/enum.h"

#include "common/macros.h"

#include "common/struct.h"


#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <algorithm>

PYBIND11_MODULE(pymsgpack, m) {

    pybind11::class_<creature_attr_def>(m, "creature_attr_def")
    .def(pybind11::init<>())
    .def_readwrite("maximun", &creature_attr_def::maximun)
    .def_readwrite("minimun", &creature_attr_def::minimun)
    .def_readwrite("use_centimeter", &creature_attr_def::use_centimeter)
    .def_readwrite("key", &creature_attr_def::key)
    .def_readwrite("deft", &creature_attr_def::deft)
    .def_readwrite("type", &creature_attr_def::type)
    .def_readwrite("desc", &creature_attr_def::desc)
    .def_readwrite("desc_bit", &creature_attr_def::desc_bit);

    pybind11::class_<creature_attr_def_data>(m, "creature_attr_def_data")
    .def(pybind11::init<>())
    .def("add", &creature_attr_def_data::add)
    .def("get", &creature_attr_def_data::get)
    .def("to_msgpack", &creature_attr_def_data::to_msgpack)
    .def("from_msgpack", &creature_attr_def_data::from_msgpack)
    .def_readwrite("defs", &creature_attr_def_data::defs);

    pybind11::class_<CMsgPackLoader>(m, "CMsgPackLoader")
    .def(pybind11::init<>())
    .def("load", &CMsgPackLoader::load)
    .def("save", &CMsgPackLoader::save)
    .def_readwrite("creature_attr_def_info", &CMsgPackLoader::creature_attr_def_info);

    pybind11::class_<CObject>(m, "CObject")
    .def(pybind11::init<>())
    .def("GetObjID", &CObject::GetObjID)
    .def("SetObjID", &CObject::SetObjID);

    pybind11::class_<CCreature, CObject>(m, "CCreature")
    .def(pybind11::init<>())
    .def("GetHP", &CCreature::GetHP)
    .def("SetHP", &CCreature::SetHP)
    .def("AddHP", &CCreature::AddHP)
    .def("GetMP", &CCreature::GetMP)
    .def("SetMP", &CCreature::SetMP)
    .def("AddMP", &CCreature::AddMP);

    m.def("GNextID", &GNextID);
    pybind11::class_<CPlayer, CCreature, CObject>(m, "CPlayer")
    .def(pybind11::init<>())
    .def(pybind11::init<int,const std::string&>())
    .def(pybind11::init<const std::string&>())
    .def("Init", &CPlayer::Init)
    .def("OnChange", &CPlayer::OnChange)
    .def("NotChange", &CPlayer::NotChange)
    .def("SystemChange", &CPlayer::SystemChange)
    .def("LoadFromDB", &CPlayer::LoadFromDB)
    .def("SaveDB", &CPlayer::SaveDB)
    .def("GetLevel", &CPlayer::GetLevel)
    .def("GetName", &CPlayer::GetName);

    pybind11::class_<CPlayerInfo>(m, "CPlayerInfo")
    .def(pybind11::init<>())
    .def("GetLevel", &CPlayerInfo::GetLevel)
    .def("GetName", &CPlayerInfo::GetName)
    .def("SetLevel", &CPlayerInfo::SetLevel)
    .def("SetName", &CPlayerInfo::SetName)
    .def_readwrite("m_nLevel", &CPlayerInfo::m_nLevel)
    .def_readwrite("m_strName", &CPlayerInfo::m_strName);

    pybind11::class_<CPlayerInfoData>(m, "CPlayerInfoData")
    .def(pybind11::init<>())
    .def("test", &CPlayerInfoData::test)
    .def("to_msgpack", &CPlayerInfoData::to_msgpack)
    .def("from_msgpack", &CPlayerInfoData::from_msgpack)
    .def_readwrite("mapInfo", &CPlayerInfoData::mapInfo);

    pybind11::class_<STaskInfo>(m, "STaskInfo")
    .def(pybind11::init<>())
    .def_readwrite("nTaskID", &STaskInfo::nTaskID)
    .def_readwrite("nTaskState", &STaskInfo::nTaskState)
    .def_readwrite("nTaskCondition", &STaskInfo::nTaskCondition);

    pybind11::class_<SPos>(m, "SPos")
    .def(pybind11::init<>())
    .def(pybind11::init<int,int,int>())
    .def_readwrite("x", &SPos::x)
    .def_readwrite("y", &SPos::y)
    .def_readwrite("z", &SPos::z);

}
